#@ load("funcs.lib.yml", "name", "controller", "initimage", "etcdendpoint", "controllerimage")
---
apiVersion: v1
kind: Service
metadata:
  name: #@ controller()
  namespace: kube-system
  labels:
    app.kubernetes.io/name: #@ name()
    app.kubernetes.io/component: #@ controller()
spec:
  type: ClusterIP
  ports:
  - port: 3370
    name: rest-api
    targetPort: 3370
  selector:
    app.kubernetes.io/name: #@ name()
    app.kubernetes.io/component: #@ controller()
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: #@ controller()
  namespace: kube-system
  labels:
    app.kubernetes.io/name: #@ name()
    app.kubernetes.io/component: #@ controller()
spec:
  serviceName: #@ controller()
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: #@ name()
      app.kubernetes.io/component: #@ controller()
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: #@ name()
        app.kubernetes.io/component: #@ controller()
    spec:
      priorityClassName: system-node-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      dnsPolicy: ClusterFirst
      #! imagePullSecrets:
      #! - name: piraeus-regcred
      initContainers:
      - name: init
        image: #@ initimage()
        imagePullPolicy: Always
        resources:
          #! requests:
          #!   cpu: 50m
          #!   memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
        env:
          - name: THIS_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: ETCDCTL_ENDPOINTS
            value: #@ etcdendpoint()
          - name: ETCDCTL_API
            value: '3'
          - name: ETCD_CLUSTER_SIZE
            value: '3'
          - name: TIMEOUT
            value: '3600'
        volumeMounts:
          - name: localtime
            mountPath: /etc/localtime
          - name: etc-linstor
            mountPath: /etc/linstor
      containers:
      - name: controller
        image: #@ controllerimage()
        imagePullPolicy: Always
        resources:
          #! requests:
          #!   cpu: '500m'
          #!   memory: '500Mi'
          limits:
            cpu: '1'
            memory: '1Gi'
        ports:
          - name: rest-api
            containerPort: 3370
            hostPort: 3370
          - name: plain
            containerPort: 3376
            hostPort: 3376
          - name: ssl
            containerPort: 3377
            hostPort: 3377
        #@ if name() == "piraeus":
        args:
          - startController
        #@ end
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          httpGet:
            port: 3370
          initialDelaySeconds: 5
          periodSeconds: 1
        volumeMounts:
          - name: localtime
            mountPath: /etc/localtime
          - name: etc-linstor
            mountPath: /etc/linstor
          - name: log
            mountPath: /var/log/linstor-controller
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: etc-linstor
          emptyDir: {}
        - name: log
          hostPath:
            path: #@ "/var/log/" + name() + "/linstor-controller"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  #! - key: #@ name() + "/controller"
                  #!   operator: In
                  #!   values:
                  #!   - "true"
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"
      #! imagePullSecrets:
      #!   - name: #@ name() + "-regcred"
